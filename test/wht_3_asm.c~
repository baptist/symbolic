	 __asm OPTION DOTNAME
	 __asm _TEXT	SEGMENT      'CODE'
	 __asm TXTST0:
	 __asm ALIGN     16
	 __asm PUBLIC sub
__declspec(naked) void sub()
{
	__asm {
		.B1.1::
		sub       rsp, 88(); 
		movsd     xmm1, QWORD PTR [rdx](); 
		movsd     xmm4, QWORD PTR [8+rdx](); 
		movaps    xmm0, xmm1(); 
		movsd     xmm2, QWORD PTR [16+rdx](); 
		addsd     xmm0, xmm4(); 
		subsd     xmm1, xmm4(); 
		movsd     xmm3, QWORD PTR [24+rdx](); 
		movsd     xmm4, QWORD PTR [32+rdx](); 
		movaps    XMMWORD PTR [32+rsp], xmm15(); 
		movaps    xmm15, xmm2(); 
		movaps    XMMWORD PTR [64+rsp], xmm13(); 
		addsd     xmm15, xmm3(); 
		subsd     xmm2, xmm3(); 
		movsd     xmm5, QWORD PTR [40+rdx](); 
		movaps    xmm3, xmm4(); 
		movsd     xmm13, QWORD PTR [48+rdx](); 
		addsd     xmm3, xmm5(); 
		subsd     xmm4, xmm5(); 
		movaps    XMMWORD PTR [48+rsp], xmm14(); 
		movaps    xmm5, xmm13(); 
		movsd     xmm14, QWORD PTR [56+rdx](); 
		addsd     xmm5, xmm14(); 
		subsd     xmm13, xmm14(); 
		movaps    xmm14, xmm0(); 
		subsd     xmm0, xmm15(); 
		addsd     xmm14, xmm15(); 
		movaps    xmm15, xmm3(); 
		subsd     xmm3, xmm5(); 
		addsd     xmm15, xmm5(); 
		movaps    xmm5, xmm14(); 
		subsd     xmm14, xmm15(); 
		addsd     xmm5, xmm15(); 
		movaps    xmm15, xmm0(); 
		subsd     xmm0, xmm3(); 
		addsd     xmm15, xmm3(); 
		movaps    xmm3, xmm1(); 
		subsd     xmm1, xmm2(); 
		addsd     xmm3, xmm2(); 
		movsd     QWORD PTR [48+rcx], xmm0(); 
		movaps    xmm0, xmm4(); 
		movaps    xmm2, xmm3(); 
		addsd     xmm0, xmm13(); 
		subsd     xmm4, xmm13(); 
		addsd     xmm2, xmm0(); 
		subsd     xmm3, xmm0(); 
		movsd     QWORD PTR [8+rcx], xmm2(); 
		movaps    xmm2, xmm1(); 
		movsd     QWORD PTR [32+rcx], xmm14(); 
		addsd     xmm2, xmm4(); 
		subsd     xmm1, xmm4(); 
		movsd     QWORD PTR [16+rcx], xmm15(); 
		movaps    xmm13, XMMWORD PTR [64+rsp](); 
		movaps    xmm14, XMMWORD PTR [48+rsp](); 
		movaps    xmm15, XMMWORD PTR [32+rsp](); 
		movsd     QWORD PTR [rcx], xmm5(); 
		movsd     QWORD PTR [40+rcx], xmm3(); 
		movsd     QWORD PTR [24+rcx], xmm2(); 
		movsd     QWORD PTR [56+rcx], xmm1(); 
		add       rsp, 88(); 
		ret
		ALIGN     16
		.B1.2::
	}
}
	 __asm _TEXT	ENDS
	 __asm .xdata	SEGMENT  DWORD   READ  ''
	 __asm ALIGN 004H
	 __asm .unwind.sub.B1_B1	DD	482305
	 __asm DD	256092
	 __asm DD	317495
	 __asm DD	194605
	 __asm DD	41476
	 __asm .xdata	ENDS
	 __asm .pdata	SEGMENT  DWORD   READ  ''
	 __asm ALIGN 004H
	 __asm .pdata.sub.B1_B1	DD	imagerel .B1.1
	 __asm DD	imagerel .B1.2
	 __asm DD	imagerel .unwind.sub.B1_B1
	 __asm .pdata	ENDS
	 __asm _DATA	SEGMENT      'DATA'
	 __asm _DATA	ENDS
	 __asm _TEXT	SEGMENT      'CODE'
	 __asm TXTST1:
	 __asm ALIGN     16
	 __asm PUBLIC init_sub
__declspec(naked) void init_sub()
{
	__asm {
		.B2.1::
		ret
		ALIGN     16
		.B2.2::
	}
}
	 __asm _TEXT	ENDS
	 __asm _DATA	SEGMENT      'DATA'
	 __asm _DATA	ENDS
	 __asm _DATA	SEGMENT      'DATA'
	 __asm _DATA	ENDS
	 __asm EXTRN	__ImageBase:PROC
	 __asm EXTRN	_fltused:BYTE
	 __asm INCLUDELIB <libmmt>
	 __asm INCLUDELIB <LIBCMT>
	 __asm INCLUDELIB <libirc>
	 __asm INCLUDELIB <svml_dispmt>
	 __asm INCLUDELIB <OLDNAMES>
	 __asm INCLUDELIB <libdecimal>
	 __asm END
