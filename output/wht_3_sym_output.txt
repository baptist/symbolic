x:= var.fresh_t("x", TArray(TDouble, 8));;
prog := Lambda(x, FList(TDouble, [(((nth(x,0)+nth(x,1))+(nth(x,2)+nth(x,3)))+((nth(x,4)+nth(x,5))+(nth(x,6)+nth(x,7)))),(((nth(x,0)-nth(x,1))+(nth(x,2)-nth(x,3)))+((nth(x,4)-nth(x,5))+(nth(x,6)-nth(x,7)))),(((nth(x,0)+nth(x,1))-(nth(x,2)+nth(x,3)))+((nth(x,4)+nth(x,5))-(nth(x,6)+nth(x,7)))),(((nth(x,0)-nth(x,1))-(nth(x,2)-nth(x,3)))+((nth(x,4)-nth(x,5))-(nth(x,6)-nth(x,7)))),(((nth(x,0)+nth(x,1))+(nth(x,2)+nth(x,3)))-((nth(x,4)+nth(x,5))+(nth(x,6)+nth(x,7)))),(((nth(x,0)-nth(x,1))+(nth(x,2)-nth(x,3)))-((nth(x,4)-nth(x,5))+(nth(x,6)-nth(x,7)))),(((nth(x,0)+nth(x,1))-(nth(x,2)+nth(x,3)))-((nth(x,4)+nth(x,5))-(nth(x,6)+nth(x,7)))),(((nth(x,0)-nth(x,1))-(nth(x,2)-nth(x,3)))-((nth(x,4)-nth(x,5))-(nth(x,6)-nth(x,7))))]));;
M := Mat([prog.at(V([V(1),V(0),V(0),V(0),V(0),V(0),V(0),V(0)])).list,prog.at(V([V(0),V(1),V(0),V(0),V(0),V(0),V(0),V(0)])).list,prog.at(V([V(0),V(0),V(1),V(0),V(0),V(0),V(0),V(0)])).list,prog.at(V([V(0),V(0),V(0),V(1),V(0),V(0),V(0),V(0)])).list,prog.at(V([V(0),V(0),V(0),V(0),V(1),V(0),V(0),V(0)])).list,prog.at(V([V(0),V(0),V(0),V(0),V(0),V(1),V(0),V(0)])).list,prog.at(V([V(0),V(0),V(0),V(0),V(0),V(0),V(1),V(0)])).list,prog.at(V([V(0),V(0),V(0),V(0),V(0),V(0),V(0),V(1)])).list]);;
reducedM := RulesStrengthReduce(M);
